package main

import (
	"fmt"
	"context"
	"log"
	"os"

	"github.com/google/generative-ai-go/genai"
	"github.com/joho/godotenv"
	"google.golang.org/api/option"
)
func main()  {

		err := godotenv.Load()
		if err != nil {
			log.Fatal("Error loading the .env File")
		}
		apiKey := os.Getenv("API_KEY")
		if apiKey == "" {
			log.Fatal("API Key not found in the enviormenr variable")
		}
		ctx := context.Background()
		// Access your API key as an environment variable
		client, err := genai.NewClient(ctx, option.WithAPIKey(apiKey))
		if err != nil {
		  log.Fatal(err)
		}
		defer client.Close()

		model := client.GenerativeModel("gemini-1.5-flash")
		resp, err := model.GenerateContent(ctx, genai.Text("Write a story about a magic backpack."))
		if err != nil {
			log.Fatal(err)
}
		// if len(resp.Candidates)>0 {
		// 	for _, candidate:= range resp.Candidates {
		// 		fmt.Printf("Genarated text: %+v\n", candidate.Content)
		// 	}
		// }else{
		// 	fmt.Println("No candidate were Generated")
		// }
		//Output: &{[...the content...]} 

		fmt.Println(resp.Candidates[0].Content.Parts[0])
}
